<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simple.loveDingZhi.mapper.UserAddressMapper" >
  <resultMap id="BaseResultMap" type="com.simple.loveDingZhi.po.UserAddress" >
    <id column="user_address_id" property="userAddressId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="sheng" property="sheng" jdbcType="VARCHAR" />
    <result column="shi" property="shi" jdbcType="VARCHAR" />
    <result column="qu" property="qu" jdbcType="VARCHAR" />
    <result column="detail_address" property="detailAddress" jdbcType="VARCHAR" />
    <result column="postalcode" property="postalcode" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_address_id, user_id, sheng, shi, qu, detail_address, postalcode, real_name,
    phone_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.simple.loveDingZhi.po.UserAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_address
    where user_address_id = #{userAddressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_address
    where user_address_id = #{userAddressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.simple.loveDingZhi.po.UserAddressExample" >
    delete from user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.simple.loveDingZhi.po.UserAddress" >
    insert into user_address (user_address_id, user_id, sheng,
    shi, qu, detail_address,
    postalcode, real_name, phone_number
    )
    values (#{userAddressId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sheng,jdbcType=VARCHAR},
    #{shi,jdbcType=VARCHAR}, #{qu,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR},
    #{postalcode,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.simple.loveDingZhi.po.UserAddress" >
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userAddressId != null" >
        user_address_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sheng != null" >
        sheng,
      </if>
      <if test="shi != null" >
        shi,
      </if>
      <if test="qu != null" >
        qu,
      </if>
      <if test="detailAddress != null" >
        detail_address,
      </if>
      <if test="postalcode != null" >
        postalcode,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userAddressId != null" >
        #{userAddressId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sheng != null" >
        #{sheng,jdbcType=VARCHAR},
      </if>
      <if test="shi != null" >
        #{shi,jdbcType=VARCHAR},
      </if>
      <if test="qu != null" >
        #{qu,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.simple.loveDingZhi.po.UserAddressExample" resultType="java.lang.Integer" >
    select count(*) from user_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_address
    <set >
      <if test="record.userAddressId != null" >
        user_address_id = #{record.userAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.sheng != null" >
        sheng = #{record.sheng,jdbcType=VARCHAR},
      </if>
      <if test="record.shi != null" >
        shi = #{record.shi,jdbcType=VARCHAR},
      </if>
      <if test="record.qu != null" >
        qu = #{record.qu,jdbcType=VARCHAR},
      </if>
      <if test="record.detailAddress != null" >
        detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.postalcode != null" >
        postalcode = #{record.postalcode,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_address
    set user_address_id = #{record.userAddressId,jdbcType=INTEGER},
    user_id = #{record.userId,jdbcType=INTEGER},
    sheng = #{record.sheng,jdbcType=VARCHAR},
    shi = #{record.shi,jdbcType=VARCHAR},
    qu = #{record.qu,jdbcType=VARCHAR},
    detail_address = #{record.detailAddress,jdbcType=VARCHAR},
    postalcode = #{record.postalcode,jdbcType=VARCHAR},
    real_name = #{record.realName,jdbcType=VARCHAR},
    phone_number = #{record.phoneNumber,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.simple.loveDingZhi.po.UserAddress" >
    update user_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sheng != null" >
        sheng = #{sheng,jdbcType=VARCHAR},
      </if>
      <if test="shi != null" >
        shi = #{shi,jdbcType=VARCHAR},
      </if>
      <if test="qu != null" >
        qu = #{qu,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        postalcode = #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where user_address_id = #{userAddressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simple.loveDingZhi.po.UserAddress" >
    update user_address
    set user_id = #{userId,jdbcType=INTEGER},
    sheng = #{sheng,jdbcType=VARCHAR},
    shi = #{shi,jdbcType=VARCHAR},
    qu = #{qu,jdbcType=VARCHAR},
    detail_address = #{detailAddress,jdbcType=VARCHAR},
    postalcode = #{postalcode,jdbcType=VARCHAR},
    real_name = #{realName,jdbcType=VARCHAR},
    phone_number = #{phoneNumber,jdbcType=VARCHAR}
    where user_address_id = #{userAddressId,jdbcType=INTEGER}
  </update>
  <!--****************************************************************************************************-->
  <insert id="insertSelectiveReturnId" parameterType="com.simple.loveDingZhi.po.UserAddress" >
    <selectKey keyProperty="userAddressId" order="AFTER" resultType="java.lang.Integer">
      select LAST_INSERT_ID()
    </selectKey>
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userAddressId != null" >
        user_address_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sheng != null" >
        sheng,
      </if>
      <if test="shi != null" >
        shi,
      </if>
      <if test="qu != null" >
        qu,
      </if>
      <if test="detailAddress != null" >
        detail_address,
      </if>
      <if test="postalcode != null" >
        postalcode,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userAddressId != null" >
        #{userAddressId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sheng != null" >
        #{sheng,jdbcType=VARCHAR},
      </if>
      <if test="shi != null" >
        #{shi,jdbcType=VARCHAR},
      </if>
      <if test="qu != null" >
        #{qu,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null" >
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="postalcode != null" >
        #{postalcode,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>