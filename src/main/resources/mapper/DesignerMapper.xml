<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simple.loveDingZhi.mapper.DesignerMapper" >
  <resultMap id="BaseResultMap" type="com.simple.loveDingZhi.po.Designer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="works_count" property="worksCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.simple.loveDingZhi.po.Designer" extends="BaseResultMap" >
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, works_count
  </sql>
  <sql id="Blob_Column_List" >
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.simple.loveDingZhi.po.DesignerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from designer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.simple.loveDingZhi.po.DesignerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from designer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from designer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from designer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.simple.loveDingZhi.po.DesignerExample" >
    delete from designer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.simple.loveDingZhi.po.Designer" >
    insert into designer (id, user_id, works_count, 
      introduction)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{worksCount,jdbcType=INTEGER}, 
      #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.simple.loveDingZhi.po.Designer" >
    insert into designer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="worksCount != null" >
        works_count,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="worksCount != null" >
        #{worksCount,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.simple.loveDingZhi.po.DesignerExample" resultType="java.lang.Integer" >
    select count(*) from designer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update designer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.worksCount != null" >
        works_count = #{record.worksCount,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update designer
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      works_count = #{record.worksCount,jdbcType=INTEGER},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update designer
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      works_count = #{record.worksCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.simple.loveDingZhi.po.Designer" >
    update designer
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="worksCount != null" >
        works_count = #{worksCount,jdbcType=INTEGER},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.simple.loveDingZhi.po.Designer" >
    update designer
    set user_id = #{userId,jdbcType=INTEGER},
      works_count = #{worksCount,jdbcType=INTEGER},
      introduction = #{introduction,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simple.loveDingZhi.po.Designer" >
    update designer
    set user_id = #{userId,jdbcType=INTEGER},
      works_count = #{worksCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--****************************************************************************************************-->

  <resultMap id="DesignerVoResultMap" type="com.simple.loveDingZhi.po.DesignerVo" extends="ResultMapWithBLOBs" >
    <!--designer表使用继承-->
    <!--  <id column="id" property="id" jdbcType="INTEGER" />
      <result column="user_id" property="userId" jdbcType="INTEGER" />
      <result column="works_count" property="worksCount" jdbcType="INTEGER" />
      <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />-->
    <!--user表-->
    <association property="user" javaType="com.simple.loveDingZhi.po.User">
      <!-- 这里的id为user的id，如果写上表示给user的id属性赋值 -->
      <id column="user_id" property="id" jdbcType="INTEGER" />
      <result column="account_number" property="accountNumber" jdbcType="VARCHAR" />
      <result column="real_name" property="realName" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="user_name" property="userName" jdbcType="VARCHAR" />
      <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
      <result column="is_designer" property="isDesigner" jdbcType="BIT" />
      <result column="is_business" property="isBusiness" jdbcType="BIT" />
      <result column="tou_xiang_url" property="touXiangUrl" jdbcType="VARCHAR" />
      <result column="address" property="address" jdbcType="VARCHAR" />
      <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    </association>
    <!--DesignDrawing表-->
    <collection property="designDrawingExtendList"
                ofType="com.simple.loveDingZhi.po.DesignDrawingExtend">
      <id column="design_drawing_id" property="id" jdbcType="INTEGER" />
      <result column="caption" property="caption" jdbcType="VARCHAR" />
      <result column="author" property="author" jdbcType="INTEGER" />
      <result column="price" property="price" jdbcType="INTEGER" />
      <result column="first_img_url" property="firstImgUrl" jdbcType="VARCHAR" />
      <result column="design_drawing_introduction" property="introduction" jdbcType="LONGVARCHAR" />
    </collection>
  </resultMap>
  <resultMap id="designerCustomResultMap" type="com.simple.loveDingZhi.po.DesignerCustom" >
    <!--designer表-->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="works_count" property="worksCount" jdbcType="INTEGER" />
    <!--user表-->
    <result column="account_number" property="accountNumber" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="is_designer" property="isDesigner" jdbcType="BIT" />
    <result column="is_business" property="isBusiness" jdbcType="BIT" />
    <result column="tou_xiang_url" property="touXiangUrl" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  <update id="updateCountByUserId" parameterType="java.lang.Integer" >
    update designer set words_count=words_count+1 where user_id=#{userId}
  </update>
  <select id="selectDesignerList" resultMap="designerCustomResultMap">
    select a.*,b.nickname,b.tou_xiang_url,b.user_name
    from designer a LEFT JOIN user b on a.user_id=b.id
  </select>
  <select id="selectDesignerDetailsByUserId" parameterType="java.lang.Integer" resultMap="DesignerVoResultMap">
   select tb_designer.user_id,
       tb_user.user_name,
       tb_user.tou_xiang_url,
       tb_designer.introduction,
      tb_design_drawing.id design_drawing_id,
      tb_design_drawing.caption,
      tb_design_drawing.first_img_url
   from designer tb_designer left join design_drawing tb_design_drawing on tb_designer.user_id=tb_design_drawing.author
                             left join user tb_user on tb_designer.user_id=tb_user.id
   where tb_designer.user_id=#{userId}
  </select>

</mapper>
